{"ast":null,"code":"var _jsxFileName = \"/Users/evgeniykireev/Documents/JS/Projects/todo-app/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your item\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input edit\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"sources":["/Users/evgeniykireev/Documents/JS/Projects/todo-app/src/components/TodoForm.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null)\n\n  useEffect(()=> {\n      inputRef.current.focus()\n  })\n\n  const handleChange = e => {\n      setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n   props.onSubmit ({\n       id: Math.floor(Math.random() * 10000),\n       text: input\n    });\n\n    setInput('')\n  };\n\n  return (\n    <form className='todo-form' onSubmit={handleSubmit}>\n        {props.edit ? (\n      <>\n        <input \n          type='text' \n          placeholder='Update your item' \n          value={input} \n          name='text' \n          className='todo-input edit' \n          onChange={handleChange}\n          ref={inputRef}\n        />\n        <button className='todo-button edit'>Update</button>\n        </> \n        ) : ( \n       <>     \n        <input \n            type='text' \n            placeholder='Add a todo' \n            value={input} \n            name='text' \n            className='todo-input' \n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className='todo-button'>Add todo</button>\n          </>\n          )}\n        \n         \n    </form>\n  )\n}\n\nexport default TodoForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;EAEA,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;EAEAD,SAAS,CAAC,MAAK;IACXQ,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;EACH,CAFQ,CAAT;;EAIA,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACtBP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;EACH,CAFD;;EAIA,MAAMO,YAAY,GAAGF,CAAC,IAAI;IACxBA,CAAC,CAACG,cAAF;IAEDZ,KAAK,CAACa,QAAN,CAAgB;MACZC,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADQ;MAEZC,IAAI,EAAEjB;IAFM,CAAhB;IAKCC,QAAQ,CAAC,EAAD,CAAR;EACD,CATD;;EAWA,oBACE;IAAM,SAAS,EAAC,WAAhB;IAA4B,QAAQ,EAAES,YAAtC;IAAA,UACKX,KAAK,CAACG,IAAN,gBACH;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,kBAFd;QAGE,KAAK,EAAEF,KAHT;QAIE,IAAI,EAAC,MAJP;QAKE,SAAS,EAAC,iBALZ;QAME,QAAQ,EAAEO,YANZ;QAOE,GAAG,EAAEH;MAPP;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAQ,SAAS,EAAC,kBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA,gBADG,gBAcF;MAAA,wBACC;QACI,IAAI,EAAC,MADT;QAEI,WAAW,EAAC,YAFhB;QAGI,KAAK,EAAEJ,KAHX;QAII,IAAI,EAAC,MAJT;QAKI,SAAS,EAAC,YALd;QAMI,QAAQ,EAAEO,YANd;QAOI,GAAG,EAAEH;MAPT;QAAA;QAAA;QAAA;MAAA,QADD,eAUG;QAAQ,SAAS,EAAC,aAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVH;IAAA;EAfH;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD;;GAzDQN,Q;;KAAAA,Q;AA2DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}